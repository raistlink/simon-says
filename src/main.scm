(define magictopleft #f)
(define magictopright #f)
(define magicbottomleft #f)
(define magicbottomright #f)
(define computer '())
(define computeraux '())
(define computeraux2 '())
(define playerinput '())
(define playerinput2 '())
(define numberstate #t)
(define statecounter 0)
(define round 1)
(define failure #f)
(define success #f)
(define points 0)
(define started #f)
(define maravilloso #f)
(define highscore 0)


(define (my-log text)
  (SDL_LogInfo SDL_LOG_CATEGORY_APPLICATION text))

(define (fill-random nlist)
  (let loop ((rest nlist))
    (if (null? rest)
        (cons (random-integer 4) '())
        (cons (car rest)
              (loop (cdr rest))))))

(define game-state 'start-screen)
(define (main)
  ((fusion:create-simple-gl-cairo '(width: 1280 height: 752))
   (let ((posx 80.0) (count 35))
     (lambda (cr)
       ;;(SDL_LogInfo SDL_LOG_CATEGORY_APPLICATION (object->string (SDL_GL_Extension_Supported "GL_EXT_texture_format_BGRA8888")))
       (let ((test-func (lambda () (my-log "test func!!!!!")))
             (paint-rectangles
              (lambda (rectangle value)
                (if (eq? rectangle topleft)
                    (cairo_set_source_rgba cr 1.0 0.0 0.0 1.0)
                    (cairo_set_source_rgba cr 0.5 0.0 0.0 1.0)))))
         (cond
          ((eq? game-state 'start-screen)
           (if (> points highscore)
               (set! highscore points))
           (cairo_select_font_face cr "Purisa" CAIRO_FONT_SLANT_NORMAL CAIRO_FONT_WEIGHT_BOLD)
           (cairo_set_source_rgba cr 0.0 0.0 1.0 0.01)
           (cairo_set_font_size cr 200.0)
           (cairo_move_to cr 80.0 250.0)
           (cairo_show_text cr "EUFRASIO")
           (cairo_select_font_face cr "Purisa" CAIRO_FONT_SLANT_NORMAL CAIRO_FONT_WEIGHT_BOLD)
           (cairo_set_source_rgba cr 0.0 1.0 1.0 0.01)
           (cairo_set_font_size cr 200.0)
           (cairo_move_to cr 350.0 650.0)
           (cairo_show_text cr "DICE")
           (cairo_select_font_face cr "Purisa" CAIRO_FONT_SLANT_NORMAL CAIRO_FONT_WEIGHT_BOLD)
           (cairo_set_source_rgba cr 0.0 0.0 0.0 0.01)
           (cairo_set_font_size cr 40.0)
           (cairo_move_to cr 500.0 400.0)
           (cairo_show_text cr "RELOADED")
           (cairo_set_source_rgba cr 1.0 0.0 1.0 0.007)
           (cairo_rectangle cr 0.0 0.0 1280.0 752.0)
           (cairo_fill cr)
           (cairo_select_font_face cr "Purisa" CAIRO_FONT_SLANT_NORMAL CAIRO_FONT_WEIGHT_BOLD)
           (cairo_set_source_rgba cr 0.0 0.0 0.0 0.01)
           (cairo_set_font_size cr 30.0)
           (cairo_move_to cr 50.0 650.0)
           (cairo_show_text cr "Highscore:")
           (cairo_select_font_face cr "Purisa" CAIRO_FONT_SLANT_NORMAL CAIRO_FONT_WEIGHT_BOLD)
           (cairo_set_source_rgba cr 0.0 0.0 0.0 0.01)
           (cairo_set_font_size cr 30.0)
           (cairo_move_to cr 230.0 650.0)
           (cairo_show_text cr (number->string highscore))
           (cairo_select_font_face cr "Purisa" CAIRO_FONT_SLANT_NORMAL CAIRO_FONT_WEIGHT_BOLD)
           (cairo_set_source_rgba cr 0.0 0.0 0.0 0.01)
           (cairo_set_font_size cr 30.0)
           (cairo_move_to cr 50.0 600.0)
           (cairo_show_text cr "Score:")
           (cairo_select_font_face cr "Purisa" CAIRO_FONT_SLANT_NORMAL CAIRO_FONT_WEIGHT_BOLD)
           (cairo_set_source_rgba cr 0.0 0.0 0.0 0.01)
           (cairo_set_font_size cr 30.0)
           (cairo_move_to cr 160.0 600.0)
           (cairo_show_text cr (number->string points)))
          (else
           (when numberstate 
                 (when (eq? count 25)
                       (set! maravilloso #f)
                       (set! magictopleft #f)
                       (set! magictopright #f)
                       (set! magicbottomleft #f)
                       (set! magicbottomright #f))
                 (if (eq? count 35)
                     (begin (set! computer (fill-random computer))
                            (set! count 0)
                            (if (= (car computer) 0)
                                (set! magictopleft #t)
                                (set! magictopleft #f))
                            (if (= (car computer) 1)
                                (set! magictopright #t)
                                (set! magictopright #f))
                            (if (= (car computer) 2)
                                (set! magicbottomleft #t)
                                (set! magicbottomleft #f))
                            (if (= (car computer) 3)
                                (set! magicbottomright #t)
                                (set! magicbottomright #f))
                            (set! computeraux (append computeraux (cons (car computer) '())))
                            (set! computer (cdr computer))
                            (set! success #f)
                            (set! statecounter (+ statecounter 1))))
                 (set! count (+ count 1)))
           (when (> statecounter round)
                 (set! numberstate #f)
                 (set! computeraux2 computeraux)
                 (set! statecounter 0)
                 (set! magictopleft #f)
                 (set! magictopright #f)
                 (set! magicbottomleft #f)
                 (set! magicbottomright #f)
                 (set! count 35))
           (when (= (length playerinput) round)
                 (if (every = playerinput computeraux)
                     (begin (set! success #t)
                            (set! maravilloso #t)
                            (set! points (+ points (* 10 round)))
                            (set! playerinput '())
                            (set! computer computeraux)
                            (set! computeraux '())
                            (set! numberstate #t)
                            (set! round (+ round 1)))
                     (set! failure #t)))
           
           (if magictopleft  
               (cairo_set_source_rgba cr 1.0 0.0 0.0 1.0)
               (cairo_set_source_rgba cr 0.5 0.0 0.0 1.0))
           (cairo_rectangle cr 0.0 0.0 640.0 376.0)
           (cairo_fill cr)
           (if magictopright
               (cairo_set_source_rgba cr 0.0 1.0 0.0 1.0)
               (cairo_set_source_rgba cr 0.0 0.5 0.0 1.0))
           (cairo_rectangle cr 640.0 0.0 1280.0 376.0)
           (cairo_fill cr)
           (if magicbottomleft
               (cairo_set_source_rgba cr 0.0 0.0 1.0 1.0)
               (cairo_set_source_rgba cr 0.0 0.0 0.5 1.0))
           (cairo_rectangle cr 0.0 376.0 640.0 752.0)
           (cairo_fill cr)
           (if magicbottomright
               (cairo_set_source_rgba cr 1.0 1.0 0.0 1.0)
               (cairo_set_source_rgba cr 0.5 0.5 0.0 1.0))
           (cairo_rectangle cr 640.0 376.0 1280.0 752.0)
           (cairo_fill cr)
           (cairo_select_font_face cr "Purisa" CAIRO_FONT_SLANT_NORMAL CAIRO_FONT_WEIGHT_BOLD)
           (cairo_set_source_rgba cr 0.0 0.0 0.0 0.8)
           (cairo_set_font_size cr 16.0)
           (cairo_move_to cr 1115.0 40.0)
           (cairo_show_text cr "POINTS: ")
           (cairo_fill cr)
           (cairo_select_font_face cr "Purisa" CAIRO_FONT_SLANT_NORMAL CAIRO_FONT_WEIGHT_BOLD)
           (cairo_set_source_rgba cr 0.0 0.0 0.0 0.8)
           (cairo_set_font_size cr 16.0)
           (cairo_move_to cr 1200.0 40.0)
           (cairo_show_text cr (number->string points))
           (cairo_fill cr)
           (cairo_select_font_face cr "Purisa" CAIRO_FONT_SLANT_NORMAL CAIRO_FONT_WEIGHT_BOLD)
           (cairo_set_source_rgba cr 0.0 0.0 0.0 0.8)
           (cairo_set_font_size cr 16.0)
           (cairo_move_to cr 1115.0 60.0)
           (cairo_show_text cr "Ronda")
           (cairo_fill cr)
           (cairo_select_font_face cr "Purisa" CAIRO_FONT_SLANT_NORMAL CAIRO_FONT_WEIGHT_BOLD)
           (cairo_set_source_rgba cr 0.0 0.0 0.0 0.8)
           (cairo_set_font_size cr 16.0)
           (cairo_move_to cr 1200.0 60.0)
           (cairo_show_text cr (number->string round))
           (cairo_fill cr)
           (when (eq? maravilloso #t)
                 (cairo_select_font_face cr "Purisa" CAIRO_FONT_SLANT_NORMAL CAIRO_FONT_WEIGHT_BOLD)
                 (cairo_set_source_rgba cr 1.0 0.0 1.0 0.8)
                 (cairo_set_font_size cr 80.0)
                 (cairo_move_to cr 400.0 410.0)
                 (cairo_show_text cr "Maravilloso")
                 (cairo_fill cr))
           (if failure
               (begin 
                 (cairo_set_source_rgba cr 1.0 0.0 0.0 1.0)
                 (cairo_rectangle cr 0.0 0.0 1280.0 752.0)
                 (cairo_fill cr)
                 (set! started #f)
                 (set! numberstate #t)
                 (set! round 1)
                 (set! computer '())
                 (set! computeraux '())
                 (set! playerinput '()))
               'draw)))
         'draw)))

   (lambda (event)
     (let ((type (SDL_Event-type event)))
       (cond
        ((= type SDL_KEYDOWN)
         (let* ((kevt (SDL_Event-key event))
                (key (SDL_Keysym-sym (SDL_KeyboardEvent-keysym kevt))))
           (if (eq? numberstate #f)
               (cond ((= key SDLK_q)
                      (set! magictopleft #t))
                     ((= key SDLK_w)
                      (set! magictopright #t))
                     ((= key SDLK_a)
                      (set! magicbottomleft #t))
                     ((= key SDLK_s)
                      (set! magicbottomright #t))
                     (else
                      (SDL_LogInfo SDL_LOG_CATEGORY_APPLICATION (string-append "Key: " (number->string key))))))
         (if (= key SDLK_ESCAPE)
          'exit)))
        ((= type SDL_KEYUP)
         (let* ((kevt (SDL_Event-key event))
                (key (SDL_Keysym-sym (SDL_KeyboardEvent-keysym kevt))))
           (if (eq? numberstate #f)
               (cond ((= key SDLK_q)
                      (set! magictopleft #f)
                      (set! playerinput (append playerinput '(0))) 
                      (set! playerinput2 0)
                      (if (eq? (car computeraux2) playerinput2)
                          (set! computeraux2 (cdr computeraux2))
                          (set! failure #t))
                      (pp playerinput))
                     ((= key SDLK_w)
                      (set! magictopright #f)
                      (set! playerinput (append playerinput '(1)))
                      (set! playerinput2 1)
                      (if (eq? (car computeraux2) playerinput2)
                          (set! computeraux2 (cdr computeraux2))
                          (set! failure #t))
                      (pp playerinput))
                     ((= key SDLK_a)
                      (set! magicbottomleft #f)
                      (set! playerinput (append playerinput '(2)))
                      (set! playerinput2 2)
                      (if (eq? (car computeraux2) playerinput2)
                          (set! computeraux2 (cdr computeraux2))
                          (set! failure #t))
                      (pp playerinput))
                     ((= key SDLK_s)
                      (set! magicbottomright #f)
                      (set! playerinput (append playerinput '(3)))
                      (set! playerinput2 3)
                      (if (eq? (car computeraux2) playerinput2)
                          (set! computeraux2 (cdr computeraux2))
                          (set! failure #t))
                      (pp playerinput))))
           (if (= key SDLK_SPACE)
            (begin (set! game-state 'computer-phase)
                   (set! failure #f)
                   (set! points 0)))))
        ((= type SDL_MOUSEBUTTONDOWN))
        ((= type SDL_FINGERDOWN)
         (SDL_LogInfo SDL_LOG_CATEGORY_APPLICATION "Finger down!"))
        ((= type SDL_WINDOWEVENT)
         'handle-window-events)
        ((= type SDL_QUIT)
         'exit))))))
